<?php
/*
Plugin Name: Update Prices Woocommerce
Description: Plugin de actualización de precios masivamente.
Version:     1.7
Author:      Abraham Flores Cosme
*/

//Ruta de lanzador.php para automatizar el proceso al crear o actualizar un producto
$lanzador_path =plugin_dir_path(__FILE__) . 'lanzador.php';

if (file_exists($lanzador_path)){
	include_once $lanzador_path;
}


if( ! class_exists( 'WP_List_Table' ) ) {
    require_once( ABSPATH.'wp-admin/includes/class-wp-list-table.php' );
}

//Voy a obtener el usuario



class Historial_Table extends WP_List_Table {
	function get_data(){
		$historial = get_option('updatepriceswc_historial',[]);
		return array_reverse($historial); // para mostrar el historial de forma DESC
	}

	function get_columns(){
	  $columns = array(
	  	'B' => 'Dividendo <b>B</b>',
	  	'C' => 'Divisor <b>C</b>',
		  'D' => 'Costo Fijo <b>D</b>',
	  	'cotizacion' => '<b>Cotización</b>',
      'precio_minimo' => '<b>Precio Mínimo</b>',
	  	'fecha' => 'Fecha',
		'nombre_usuario' => 'Usuario ID'
	  );
	  return $columns;
	}

	function prepare_items() {
	  $columns = $this->get_columns();
	  $hidden = array();
	  $sortable = array('desc');
	  $this->_column_headers = array($columns, $hidden, $sortable);
	  $this->items = $this->get_data();
	}

	function column_default( $item, $column_name ) {
	  return $item[ $column_name ];
	}
}


//Paso Estas lineas de bajo de la declaracion de $authorized_users


function updatepriceswc_options() {	

	// Voy a obtener una lista de Usuarios Autorizados
	$authorized_users = get_option('updatepriceswc_authorized_users', []);

	// Generar Formulario en el Frontend CRUD

	//Voy hacer comprobaciones para mostrar el menu
	$usuario = wp_get_current_user();
	$usuario_logueado = $current_user->user_login;

	if (current_user_can('manage_woocommerce') or current_user_can('administrator') or in_array($usuario_logueado, $authorized_users)){
		function plugin_updatepriceswc() {
	add_menu_page( 
		'Actualización de precios', 
		'Actualización de precios',
		'manage_options, ', 
		'updatepriceswc', 
		'updatepriceswc_options',
		'dashicons-clipboard' ); 
}
add_action('admin_menu', 'plugin_updatepriceswc');
	}

	//Voy a comprobar si se agregaron usuarios por el formulario
	if (isset($_POST['add_user'])){
		$user_to_add = sanitize_text_field($_POST['user_to_add']);

		//Voy a agregar a los usuarios a la lista de usuarios actualizados si no esta
		if (!in_array($user_to_add, $authorized_users)){
			$authorized_users[] = $user_to_add;
			update_option('updatepriceswc_authorized_users', $authorized_users);
		}
	}

	//Voy a comprobar si se envio el formulario
	if (isset($_POST['remove_user'])){
		$user_to_remove = sanitize_text_field($_POST['user_to_remove']);

		//Voy a eliminar al usuarios de la lista de autorizados
		$index = array_search($user_to_remove, $authorized_users);
		if ($index !== false){
			unset($authorized_users[$index]);
				update_option('updatepriceswc_authorized_users', $authorized_users);
			}
		}

//Voy a verificar si el usuario agregado puede conectarse
$user_log = wp_get_current_user();
$user_to_check = $user_log->user_login;
$allow_role = 'vendedor';
//delete_option('updatepriceswc_historial');
if (
    in_array('administrator', $user_log->roles) or 
    isset($user_log->caps['administrator']) or 
     
    (in_array($user_log->user_login, $authorized_users) or 
    in_array($allow_role, $user_log->roles))
) {
    echo ('Tienes acceso a la Actualizacion de Precios');
} else {
    echo ('No tienes acceso a la Actualizacion de Precios');
	exit;
}
