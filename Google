class Custom_Category_Products_Widget extends WP_Widget {
    // Constructor
    public function __construct() {
        parent::__construct(
            'custom_category_products_widget',
            __('Productos por Categoría', 'text_domain'),
            array(
                'description' => __('Muestra un slider de productos por categoría', 'text_domain')
            )
        );
    }

    // Función para mostrar contenido en el Frontend
    public function widget($args, $instance) {
        $selected_category = isset($instance['selected_category']) ? $instance['selected_category'] : 0;

        // Verifica si se seleccionó una categoría
        if ($selected_category > 0) {
            // Obtiene los productos de la categoría seleccionada
            $products = wc_get_products(array(
                'category' => array($selected_category),
                'limit' => -1,
            ));

            // Verifica si hay productos en la categoría
            if (!empty($products)) {
                // Genera el div con la clase "widget-category-products"
                echo '<div class="widget-category-products">';

                // Genera el slider con Slick
                echo '<div class="slick-slider">';
                echo '<div class="slider-items">';

                foreach ($products as $product) {
                    $this->render_product($product);
                }

                // Cierra el slider
                echo '</div>';

                // Agrega los controles del slider
                echo '<div class="slider-controls">';
                echo '<button class="prev">Prev</button>';
                echo '<button class="next">Next</button>';
                echo '</div>';

                // Cierra el div "widget-category-products"
                echo '</div>';
                echo '</div>';

                // Encola los scripts de Slick Slider
                $this->enqueue_slick_slider();
            } else {
                echo 'No hay productos en esta categoría.';
            }
        } else {
            echo 'No se seleccionó ninguna categoría.';
        }
    }

    // Función para generar el HTML de un producto
    private function render_product($product) {
        echo '<div class="slide">';
        echo '<a href="' . get_permalink($product->get_id()) . '">';
        echo '<img src="' . $product->get_image() . '" alt="' . esc_attr($product->get_name()) . '">';
        echo '<h2>' . esc_html($product->get_name()) . '</h2>';
        echo '<span class="price">' . $product->get_price_html() . '</span>';
        echo '</a>';
        echo '</div>';
    }

    // Función para encolar scripts y estilos
    private function enqueue_slick_slider() {
        // Asegúrate de que las rutas a los archivos CSS y JavaScript sean correctas
        wp_enqueue_style('slick-css', get_template_directory_uri() . '/css/slick.css');
        wp_enqueue_script('slick-js', get_template_directory_uri() . '/js/slick.min.js', array('jquery', 'slick-js'), null, true);

        // Agrega el script personalizado para el slider con carga bajo demanda
        wp_enqueue_script('widget-slider', get_template_directory_uri() . '/js/widget-slider.js', array('jquery', 'slick-js'), null, true);

        // Variables JavaScript para configurar la carga bajo demanda
        wp_localize_script('widget-slider', 'widget_slider_params', array(
            'posts_per_slide' => 5,
        ));
    }

    // Función para gestionar el formulario del widget en el backend
    public function form($instance) {
        $selected_category = isset($instance['selected_category']) ? $instance['selected_category'] : 0;
        ?>
        <p>
            <label for="<?php echo $this->get_field_id('selected_category'); ?>">Selecciona una categoría de productos de WooCommerce:</label>
            <select class="widefat" id="<?php echo $this->get_field_id('selected_category'); ?>"
                    name="<?php echo $this->get_field_name('selected_category'); ?>">
                <?php
                // Obtiene la lista de categorías de productos de WooCommerce
                $product_categories = get_terms('product_cat', array('hide_empty' => false));
                foreach ($product_categories as $category) {
                    echo '<option value="' . esc_attr($category->term_id) . '" ' . selected($selected_category, $category->term_id) . '>' . esc_html($category->name) . '</option>';
                }
                ?>
            </select>
        </p>
        <?php
    }

    // Función para guardar la configuración del widget
    public function update($new_instance, $old_instance) {
        $instance = array();
        $instance['selected_category'] = (!empty($new_instance['selected_category'])) ? intval($new_instance['selected_category']) : 0;
        return $instance;
    }
}

// Registra el widget personalizado
function register_custom_category_products_widget() {
    register_widget('Custom_Category_Products_Widget');
}

add_action('widgets_init', 'register_custom_category_products_widget');
